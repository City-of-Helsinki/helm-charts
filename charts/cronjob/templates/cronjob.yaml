{{- if not .Values.singleRun }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "cronjob.fullname" . }}
  labels:
    {{- include "cronjob.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          {{- with .Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          labels:
            {{- include "cronjob.selectorLabels" . | nindent 12 }}
        spec:
          {{- if .Values.activeDeadlineSeconds }}
          activeDeadlineSeconds: {{ .Values.activeDeadlineSeconds }}
          {{- end}}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          serviceAccountName: {{ include "cronjob.serviceAccountName" . }}
          {{- with .Values.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          containers:
            - name: {{ .Chart.Name }}
              {{- with .Values.podSecurityContext }}
              securityContext:
                {{- toYaml . | nindent 14 }}
              {{- end }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              {{- with .Values.resources }}
              resources:
                {{- toYaml . | nindent 14 }}
              {{- end }}
              {{- with .Values.args }}
              args:
                {{- toYaml . | nindent 14 }}
              {{- end }}
              {{- with .Values.command }}
              command:
                {{- toYaml . | nindent 14 }}
              {{- end }}
              envFrom:
              {{- if .Values.envSecret }}
              - secretRef:
                  name: {{ .Values.envSecret }}
              {{- end }}
              {{- if .Values.envConfigMap }}
              - configMapRef:
                  name: {{ .Values.envConfigMap }}
              {{- end }}
              env:
              {{- range $key, $val := .Values.env }}
              - name: {{ $key | upper }}
                value: {{ $val }}
              {{- end }}
          restartPolicy: {{ .Values.restartPolicy }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 10 }}
          {{- end }}
{{- end }}
